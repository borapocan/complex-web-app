version: '3'
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    restart: always
    depends_on:
      - api
      - client
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - "/home/node/app/node_modules"
      - "./server:/home/node/app"
    environment:
      - REDIS_HOST=multi-docker-redis-oss.a5hak4.ng.0001.euw1.cache.amazonaws.com
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=database-1.cbi2o2ucaat1.eu-west-1.rds.amazonaws.com
      - PGDATABASE=database-1
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - "/home/node/app/node_modules"
      - "./client:/home/node/app"
    environment:
      - WDS_SOCKET_PORT=0
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - "/home/node/app/node_modules"
      - "./worker:/home/node/app"
    environment:
      - REDIS_HOST=multi-docker-redis-oss.a5hak4.ng.0001.euw1.cache.amazonaws.com
      - REDIS_PORT=6379
